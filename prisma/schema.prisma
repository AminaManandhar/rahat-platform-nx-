generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider            = "prisma-dbml-generator"
  output              = "./dbml"
  outputName          = "donation-tracker-model.dbml"
  projectName         = "Donation Tracker"
  projectDatabaseType = "PostgreSQL"
  projectNote         = "Donation Tracker"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "./docs"
}

enum Gender {
  Male
  Female
  Others
  Unknown
}

model AppSettings {
  id        Int      @id @default(autoincrement())
  name      String
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  walletAddress Bytes?   @unique
  profileImage  String?

  projects Project[] @relation("UserProjects")
}

model Project {
  id              Int       @id @default(autoincrement())
  name            String
  startDate       DateTime
  endDate         DateTime
  budget          Int       @default(0)
  disbursed       Int       @default(0)
  extras          Json?
  location        String?
  projectType     String?
  projectManager  String?
  description     String?
  contractAddress Bytes?    @unique
  deletedAt       DateTime?
  isApproved      Boolean   @default(false)

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  owner         User[]        @relation("UserProjects")
  beneficiaries Beneficiary[] @relation("BeneficiaryProjects")
  vendors       Distributor[] @relation("ProjectDistributors")
}

model Beneficiary {
  id             Int       @id @default(autoincrement())
  name           String
  gender         Gender    @default(Unknown)
  walletAddress  Bytes?    @unique
  phone          String?
  email          String?
  address        Json
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  tokensAssigned Int       @default(0)
  tokensClaimed  Int       @default(0)
  isActive       Boolean   @default(false)

  extra Json?

  projects Project[] @relation("BeneficiaryProjects")
}

model Distributor {
  id             Int       @id @default(autoincrement())
  name           String
  walletAddress  Bytes?    @unique
  phone          String?
  email          String?
  address        Json
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  isActive       Boolean   @default(false)
  tokenBalance   Int    @default(0)
  tokenPending   Int    @default(0)
  tokenDisbursed Int    @default(0)

  projects Project[] @relation("ProjectDistributors")
}
